{
    "name": "Project 1",
    "command": "./gradebook_main",
    "prompt": "gradebook>",
    "use_valgrind": "y",
    "tests": [
        {
            "name": "Start, Quit",
            "description": "Starts the program then issues the exit command which should end the program",
            "output_file": "test_cases/output/start_quit.txt",
            "input_file": "test_cases/input/start_quit.txt"
        },
        {
            "name": "Start, Print, Quit",
            "description": "Starts the program, attempts a print command which should cause an error, then issues the exit command which should end the program.",
            "output_file": "test_cases/output/start_print_quit.txt",
            "input_file": "test_cases/input/start_print_quit.txt"
        },
        {
            "name": "Check for End of Input",
            "description": "Checks that the main() loop detects EOF when scanning typed input and exits. When working interactively in a Unix terminal typing Ctrl-d (Control \"d\") will indicate the end of input. When piping a script in this happens automatically. If this test fails, ensure main() is looking for EOF on scanf()/fscanf() calls and exits when detected.",
            "output_file": "test_cases/output/end_input.txt",
            "input_file": "test_cases/input/end_input.txt"
        },
        {
            "name": "Create a New Gradebook",
            "description": "Starts the program, creates a new gradebook with the class name \"CSCI2011\" and then issues the command to exit.",
            "output_file": "test_cases/output/create_new.txt",
            "input_file": "test_cases/input/create_new.txt"
        },
        {
            "name": "Create a New Gradebook and Print Class Name",
            "description": "Starts the program, creates a new gradebook with the class name \"CSCI2011\", issues a command to print out the name of the new gradebook, and exits.",
            "output_file": "test_cases/output/create_print.txt",
            "input_file": "test_cases/input/create_print.txt"
        },
        {
            "name": "Print Empty Gradebook Scores",
            "description": "Starts the program, creates a new gradebook with the class name \"CSCI2011\", issues a command to print out the name of the new gradebook, and exits.",
            "output_file": "test_cases/output/print_empty.txt",
            "input_file": "test_cases/input/print_empty.txt"
        },
        {
            "name": "Invalid Print",
            "description": "Starts the program and requests to print out scores when there is no currently active gradebook.",
            "output_file": "test_cases/output/invalid_print.txt",
            "input_file": "test_cases/input/invalid_print.txt"
        },
        {
            "name": "Invalid Lookup",
            "description": "Starts the program and attempt to look up a score when there is no currently active gradebook, which should yield an error.",
            "output_file": "test_cases/output/invalid_lookup.txt",
            "input_file": "test_cases/input/invalid_lookup.txt"
        },
        {
            "name": "Invalid then Valid Print",
            "description": "Starts the program and requests to print out scores when there is no currently active gradebook. Then creates a new empty gradebook and prints out scores.",
            "output_file": "test_cases/output/invalid_valid_print.txt",
            "input_file": "test_cases/input/invalid_valid_print.txt"
        },
        {
            "name": "Score Lookups in Empty Gradebook",
            "description": "Attempts to look up student scores in an empty gradebook. Should get a not found message for any lookup attempt.",
            "output_file": "test_cases/output/empty_lookups.txt",
            "input_file": "test_cases/input/empty_lookups.txt"
        },
        {
            "name": "Invalid Add",
            "description": "Starts the program and attempts to add a new student score before there is any currently active gradebook.",
            "output_file": "test_cases/output/invalid_add.txt",
            "input_file": "test_cases/input/invalid_add.txt"
        },
        {
            "name": "Invalid Add Negative",
            "description": "Starts the program and attempts to add a new student with a negative score.",
            "output_file": "test_cases/output/invalid_add_negative.txt",
            "input_file": "test_cases/input/invalid_add_negative.txt"
        },
        {
            "name": "Add Single Score",
            "description": "Creates a new gradebook and adds one student score to it.",
            "output_file": "test_cases/output/add_single.txt",
            "input_file": "test_cases/input/add_single.txt"
        },
        {
            "name": "Add Multiple Scores",
            "description": "Creates a new gradebook and adds a small number of scores.",
            "output_file": "test_cases/output/add_multiple.txt",
            "input_file": "test_cases/input/add_multiple.txt"
        },
        {
            "name": "Add and Print Single Score",
            "description": "Creates a new gradebook and adds one student score before printing it out.",
            "output_file": "test_cases/output/add_print_single.txt",
            "input_file": "test_cases/input/add_print_single.txt"
        },
        {
            "name": "Add and Print Scores",
            "description": "Creates a new gradebook and adds a small number of scores before printing them in alphabetical order by student name.",
            "output_file": "test_cases/output/and_print_multiple.txt",
            "input_file": "test_cases/input/and_print_multiple.txt"
        },
        {
            "name": "Add and Look Up Score",
            "description": "Creates a new gradebook and adds a single score before looking up this score.",
            "output_file": "test_cases/output/add_lookup_single.txt",
            "input_file": "test_cases/input/add_lookup_single.txt"
        },
        {
            "name": "Add and Look Up Scores",
            "description": "Creates a new gradebook and adds a small number of scores. Then looks up each of the previously added scores.",
            "output_file": "test_cases/output/add_lookup_multiple.txt",
            "input_file": "test_cases/input/add_lookup_multiple.txt"
        },
        {
            "name": "Add and Look Up Scores 2",
            "description": "Creates a new gradebook and adds a small number of scores. Then looks up each of the previously added scores as well as non-existent scores.",
            "output_file": "test_cases/output/add_loppkup_multiple2.txt",
            "input_file": "test_cases/input/add_loppkup_multiple2.txt"
        },
        {
            "name": "Clear Before Class Command",
            "description": "Creates a new gradebook, then clears it, then attempts to print out class name, which should result in an error message.",
            "output_file": "test_cases/output/clear_class.txt",
            "input_file": "test_cases/input/clear_class.txt"
        },
        {
            "name": "Clear Before Print",
            "description": "Creates a new gradebook, then clears it, then attempts to print out scores, which should result in an error message.",
            "output_file": "test_cases/output/clear_print.txt",
            "input_file": "test_cases/input/clear_print.txt"
        },
        {
            "name": "Clear Before Lookup",
            "description": "Creates a new gradebook, then clears it, then attempts to print out scores, which should result in an error message.",
            "output_file": "test_cases/output/clear_lookup.txt",
            "input_file": "test_cases/input/clear_lookup.txt"
        },
        {
            "name": "Invalid Clear",
            "description": "Creates a new gradebook, then clears it, then tries to run the clear command again, which should cause an error.",
            "output_file": "test_cases/output/invalid_clear.txt",
            "input_file": "test_cases/input/invalid_clear.txt"
        },
        {
            "name": "Multiple Clears",
            "description": "Runs the clear command several times in a row to check that all memory is properly freed and no leaks are present.",
            "output_file": "test_cases/output/multi_clear.txt",
            "input_file": "test_cases/input/multi_clear.txt"
        },
        {
            "name": "Non-Existent Text File",
            "description": "Attempts to read from a gradebook text file that does not exist.",
            "output_file": "test_cases/output/non_existent_text.txt",
            "input_file": "test_cases/input/non_existent_text.txt"
        },
        {
            "name": "Text File Persistence",
            "description": "Creates a new gradebook with a small number of scores, then writes the gradebook to a file. Clears, then reads in that file to ensure that an identical gradebook is recovered from the saved data.",
            "output_file": "test_cases/output/text_file_persistence.txt",
            "input_file": "test_cases/input/text_file_persistence.txt"
        }
    ]
}
